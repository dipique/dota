@using DotA.WebEdit.Models;
@using DotA.Model.Extensions;
@{
    Layout = null;
}

@model DynSingleView<Effect>

@using (Html.BeginForm("EffectUpdate", "Hero"))
{
    Html.AntiForgeryToken();

    <table border="1" style="margin-left:10px">
        @{
            var prefix = $"{nameof(Model.Item)}.";
            foreach (var dv in Model.DisplayValues)
            {
                string propName = $"{prefix}{dv.PropertyName}";

                <tr>
                    <td>@dv.PropertyDisplayName</td>
                    <td>
                        @if (dv.PrimaryKey)
                        {
                            //No updates work if we don't bind the primary key
                            @Html.Hidden(propName);
                        }

                        @if (dv.Type == DisplayValueType.DecimalList)
                        {
                            var value = dv.SrcProperty.GetValue<List<decimal>>(Model.Item);
                            var itemCount = value.Count() == 0 ? 4 : value.Count();
                            var includeLabels = itemCount != 1;
                            @Html.Partial("ListEdit",
                                value,
                                new ViewDataDictionary { { "Name", dv.PropertyName },
                                                         { "ModelPrefix", prefix },
                                                         { "IncludeLabels", includeLabels },
                                                         { "LabelPrefix", "Lvl" },
                                                         { "ItemCount", itemCount },
                                                         { "Disabled", !dv.Editable || dv.PrimaryKey}
                                });
                        }
                        else
                        {
                            var attribs = new { disabled = "disabled" };
                            if (dv.Editable && !dv.PrimaryKey) { attribs = null; }
                            @Html.Editor(propName, new { Name = dv.PropertyName, ModelPrefix = prefix, htmlAttributes = attribs });
                        }
                    </td>
                </tr>
            }
            <tr>
                <td align="right" colspan="2">
                    <input type="submit" name="Delete" value="Delete"/>
                    <input type="submit" name="Update" value="Update" />
                </td>                
            </tr>
        }
    </table>
        <p />
            }