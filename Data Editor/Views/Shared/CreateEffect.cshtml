@using DotA.WebEdit.Models;

@{
    Layout = null;
}

@model DynSingleView<Effect>

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>CreateEffect</title>
</head>
<body>
    @using (Html.BeginForm("CreateEffect", "Hero"))
    {
        Html.AntiForgeryToken();

        <table border="1" style="margin-left:10px">
            @{
                foreach (var dv in Model.DisplayValues)
                {
                    <tr>
                        <td>@dv.PropertyDisplayName</td>
                        <td>
                            @if (!dv.Editable)
                    {
                        switch (dv.Type)
                        {
                            case DisplayValueType.Decimal:
                                        @Html.DisplayFor(Model.GetExpression<decimal>(dv));
                                break;
                            case DisplayValueType.PickList_Multi:
                                        @Html.ListBox($"{nameof(Model.Item)}.{dv.PropertyName}", dv.PicklistOptionsAsListItems(Model.Item))
                                        break;
                                    case DisplayValueType.PickList:
                                        @Html.DropDownList($"{nameof(Model.Item)}.{dv.PropertyName}")
                                        break;
                                    case DisplayValueType.DecimalList:
                                        @Html.DisplayFor(Model.GetExpression<List<decimal>>(dv)); //TODO: adjust editor to display with levels
                                break;
                            default:
                                        @Html.DisplayFor(Model.GetExpression<object>(dv));
                                break;
                        }
                    }
                    else
                    {
                        switch (dv.Type)
                        {
                            case DisplayValueType.Decimal:
                            case DisplayValueType.String:
                            case DisplayValueType.Other:
                                        @Html.TextBox($"{nameof(Model.Item)}.{dv.PropertyName}", dv.GetValueAsString(Model.Item), new { @class = "form-control" });
                                break;
                            case DisplayValueType.PickList_Multi:
                                        @Html.Editor($"{nameof(Model.Item)}.{dv.PropertyName}", new { Name = dv.PropertyName });
                                break;
                            case DisplayValueType.PickList:
                                        @Html.DropDownList($"{nameof(Model.Item)}.{dv.PropertyName}", dv.PicklistOptionsAsListItems(Model.Item));
                                break;
                            case DisplayValueType.DecimalList:
                                        @Html.EditorFor(Model.GetExpression<List<decimal>>(dv)); //TODO: adjust editor to disply with levels
                                break;
                        }
                    }
                        </td>
                    </tr>
                }
            }
            <tr></tr>
        </table>
        <input type="submit" name="Add Effect" />
        <p />
                }
</body>
</html>
